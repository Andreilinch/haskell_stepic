-- Кортежи и списки также параметрически полиморфны (как и функции, которые мы разбиради до этого)
-- 1) Списки
-- :t [True, False]
-- [True, False] :: [Bool]

-- тип символьных элементов это просто строка
-- :t "aqaqa"
-- "aqaqa" :: [Char]

-- на примере пустого списка понимаем, что списки полиморфны по типу элемента, который в них хранится
-- :t []
-- [] :: [a]

-- 2) Кортежи
-- Кортежи так же полиморфны, но степень полиморфизма кортежей выше, чем у списка

-- Кортеж можно задать двумя способами
-- (True, 3) = (,) True 3
-- :t (,)
-- (,) :: a -> b -> (a, b)
-- то есть чтобы сконструировать кортеж нам надо передать в него столько аргументов, сколько элементов, сколько мы в нем предполагаем a и b, ну и типы могут быть разные
-- :t (,) True 'c'
-- (,) True 'c' :: (Bool, Char)

-- Задача:
-- Сколько разных всегда завершающихся функций с типом a -> (a,b) -> a -> (b,a,a) можно реализовать?
-- В данной задачи нам нужно из трёх типов a разместить в кортеже пару. При этом порядок размещения важен и возможны повторения.
--
-- Таким образом используем формулу размещений с повторениями: 3^2 = 9
-- 'a' в каждом из 3-ех аргументов и в 2-ух местах результата. 'b' в одном аргументе - тут вариантов нет. Итого 3 в степени 2 равно 9
